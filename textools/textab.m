function textab(rowtext,coltext,A,format,prec,exp,file)
%TEXTAB  Creates an LaTeX table.
%   TEXTAB(ROWTEXT,COLTEXT,A[,FORMAT[,PREC[,EXP[,FILE]]]])
%   creates a tex-file for use with LaTeX.
%   ROWTEXT and COLTEXT are the texts which appears on the
%   columns and rows respectively.
%   Variable A is the matrix containing the table contents.
%   FORMAT decides the format of the tabular values:
%      1 : FLOAT (default)
%      2 : INTEGER
%      3 : COMPLEX FLOAT
%      4 : COMPLEX INTEGER
%   where modes 2,4 truncates the values to integers.
%   Parameter PREC is the precision or number of digits of
%   precision, defaults to -1 which means that enables automatic
%   choice of precision (see NUM2STR).
%   EXP is the type of exponent used:
%      'e', 'E' or '10',
%   where '10' is the default value.
%   FILE is the filename and defaults to "out.tex".
%   The main tex-file could look approximately like this:
%
%     \documentclass{article}
%     \begin{document}
%       \begin{table}
%         \centering
%         \input{test.tex}
%         \caption{A test of \TeX tab v.2.}
%       \end{table}
%     \end{document}
%
%   See also TEXPIC, TEXMAT.

% Copyright (c) 2002-09-23, B. Rasmus Anthin.
% Revision: 2002-10-04, B. Rasmus Anthin.

error(nargchk(3,7,nargin))
if nargin<7
   file='out';
end
if nargin<6 | isempty(exp)
   exp='10';
end
if nargin<5 | isempty(prec)
   prec=-1;   %-1
end
if nargin<4 | isempty(format)
   format=1;
end
if ~any(file=='.')
   file=[file '.tex'];
end

rt=strrep(cellstr(rowtext),'\','\\');
ct=strrep(cellstr(coltext),'\','\\');
nrow=length(rt);
ncol=length(ct);
if ~[(~nrow | nrow==size(A,1)) & (~ncol | ncol==size(A,2))]
   error('Number of rows and columns for texts must correspond to matrix dim.')
end

fp=fopen(file,'w');
fprintf(fp,'%%This file was generated by TeXtab v.2 for MATLAB.\n');
fprintf(fp,'%%Copyright (c) 2002-09-23, 2002-09-24, B. Rasmus Anthin.\n\n');

if nrow
   col1='|l|';
else
   col1='|';
end

fprintf(fp,['\\begin{tabular}{' col1 ]);
for i=1:ncol
   switch(format)
   case 1, fprintf(fp,'r@{.}l|');
   case 2, fprintf(fp,'r@{}l|');
   case 3, fprintf(fp,'r@{\\,}c@{\\,}l|');
   case 4, fprintf(fp,'r@{}c@{}l|');
   end
end
fprintf(fp,'}\n');
fprintf(fp,'\\hline\n');
for i=1:ncol
   if ~nrow & i==1
      pre='';
   else
      pre=' & ';
   end
   switch(format)
   case 1, fprintf(fp,[pre '\\multicolumn{2}{|l|}{$' ct{i} '$}']);
   case 2, fprintf(fp,[pre '\\multicolumn{2}{|l|}{$' ct{i} '$}']);
   case 3, fprintf(fp,[pre '\\multicolumn{3}{|l|}{$' ct{i} '$}']);
   case 4, fprintf(fp,[pre '\\multicolumn{3}{|l|}{$' ct{i} '$}']);
   end
end
fprintf(fp,' \\\\\\hline\\hline\n');

for i=1:size(A,1)
   if nrow
      fprintf(fp,['$' rt{i} '$ ']);
   end
   for j=1:size(A,2)
      num=A(i,j);
      str=texgennum(num,format,prec);
      switch(format)
      case 1
         estr=texgenexp(str,exp);
         cell=['$' str.msgn str.m1 '$&$' str.m2 estr '$'];
      case 2
         cell=['$' str.sgn '$&$' str.num '$'];
      case 3
         estr1=texgenexp(str{1},exp);
         estr2=texgenexp(str{2},exp);
         dot1='';dot2='';
         if real(num), dot1='.';end
         if imag(num), dot2='.';end
         mstr1=[str{1}.msgn [str{1}.m1 dot1 str{1}.m2]];
         mstr2=[str{2}.m1 dot2 str{2}.m2];
         csgn=str{2}.msgn;
         if isempty(csgn), csgn='+';end
         cell=['$' mstr1 estr1  '$&$' csgn '$&$' mstr2 estr2 'i' '$'];
      case 4
         num1=[str{1}.sgn str{1}.num];
         num2=str{2}.num;
         csgn=str{2}.sgn;
         if isempty(csgn), csgn='+';end
         cell=['$' num1 '$&$' csgn '$&$' num2 'i' '$'];
      end
      if ~nrow & j==1
         fprintf(fp,cell);
      else
         fprintf(fp,[' & ' cell]);
      end
   end
   fprintf(fp,' \\\\\\hline\n');
end
fprintf(fp,'\\end{tabular}');

fclose(fp);